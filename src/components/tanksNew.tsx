/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { AnimatedWaterRippleMaterial } from "@/components/waterSurfaceMaterial";

type GLTFResult = GLTF & {
  nodes: {
    Tank_Medium_1: THREE.Mesh;
    Tank_Medium_2: THREE.Mesh;
    Tank_Medium_3: THREE.Mesh;
    Tank_Medium_4: THREE.Mesh;
    Tank_Medium_5: THREE.Mesh;
    Tank_Medium_6: THREE.Mesh;
    Tank_Large_1: THREE.Mesh;
    Tank_Large_2: THREE.Mesh;
    Tank_Large_3: THREE.Mesh;
    Tank_Large_4: THREE.Mesh;
    Tank_Large_5: THREE.Mesh;
    Tank_Large_6: THREE.Mesh;
    Tank_Huge_1: THREE.Mesh;
    Tank_Huge_2: THREE.Mesh;
    Tank_Huge_3: THREE.Mesh;
    Tank_Huge_4: THREE.Mesh;
    Tank_Huge_5: THREE.Mesh;
    Tank_Huge_6: THREE.Mesh;
  };
  materials: never;
};

// Frame Material
const frameMaterial = new THREE.MeshToonMaterial({
  color: new THREE.Color(0x103d5f), // Navy color for the frame
});

// Glass Face Material
const glassFaceMaterial = new THREE.MeshBasicMaterial({
  color: new THREE.Color(0x516b9f), // White color for the glass face
  transparent: true,
  opacity: 0.9,
});

// Sand Material
const sandMaterial = new THREE.MeshToonMaterial({
  color: new THREE.Color(0xedc9af), // Light brown color for the sand
});

// FrameInner Material
const frameInnerMaterial = new THREE.MeshToonMaterial({
  color: new THREE.Color(0x596b82),
});

// WaterSurfaceMaterial
const tempWaterSurfaceMaterial = new THREE.MeshToonMaterial({
  color: new THREE.Color(0x1e90ff), // Dodger blue color for the water surface
});

// Glass Corners Material
const glassCornersMaterial = new THREE.MeshToonMaterial({
  color: new THREE.Color(0xffffff), // White color for the glass corners
});

export function TanksNew(props: JSX.IntrinsicElements["group"]) {
  const { nodes } = useGLTF("/Tanks.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group>
        <group name="Tank_Medium">
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Medium_1.geometry}
            material={glassCornersMaterial}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Medium_2.geometry}
            material={frameMaterial}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Medium_3.geometry}
            material={glassFaceMaterial}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Medium_4.geometry}
            material={sandMaterial}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Medium_5.geometry}
            material={frameInnerMaterial}
          />

          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Medium_6.geometry}
          >
            <AnimatedWaterRippleMaterial />
          </mesh>
        </group>
        <group position={[5, 0, 0]} name="Tank_Large">
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Large_1.geometry}
            material={glassCornersMaterial}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Large_2.geometry}
            material={frameMaterial}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Large_3.geometry}
            material={glassFaceMaterial}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Large_4.geometry}
            material={sandMaterial}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Large_5.geometry}
            material={frameInnerMaterial}
          />
          <mesh castShadow receiveShadow geometry={nodes.Tank_Large_6.geometry}>
            <AnimatedWaterRippleMaterial />
          </mesh>
        </group>
        <group position={[11, 0, 0]} name="Tank_Huge">
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Huge_1.geometry}
            material={glassCornersMaterial}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Huge_2.geometry}
            material={frameMaterial}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Huge_3.geometry}
            material={glassFaceMaterial}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Huge_4.geometry}
            material={sandMaterial}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Tank_Huge_5.geometry}
            material={frameInnerMaterial}
          />
          <mesh castShadow receiveShadow geometry={nodes.Tank_Huge_6.geometry}>
            <AnimatedWaterRippleMaterial />
          </mesh>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/Tanks.glb");
